<resources>
  <string name="cancel">キャンセル</string>
  <string name="parameters">パラメーター</string>
  <string name="copy">コピー</string>
  <string name="settings">設定</string>
  <string name="help">ヘルプ</string>

<string name="help_content">
\nmcOptCal\n
最小二乗モンテカルロ法（Least Squares Monte Carlo Method）を用いてアメリカン・バミューダンオプション価格を計算。モンテカルロ法でアジアンオプション価格を計算。また、ブラック-ショールズ方程式を用いることにより、ヨーロピアンオプション価格の計算も可能である。\n
オプションのペイオフ関数及び、擬似乱数生成器（PRNG）のシード値はユーザーによる設定が可能である。\n
Androidサービスの利用により、長い継続計算をバックグラウンドで行っている間に、フォールグラウンドで別のアクティビティを実行できる。\n
注意：モンテカルロシミュレーションのパス数、行使ステップ数のパラメーターが大きすぎた場合、計算中の端末動作が遅くなることがある。\n
\n
ウェブ： http://dragongate-technologies.com \n
ソース： https://github.com/amulcahy/mcOptCal \n
\n
v1.05 - LSMモードでPRNGシード不適用のバグを修正。\n
\n
BS\n
オプション・パラメーター入力により、ブラック-ショールズ方程式でヨーロピアンオプション価格が計算可能。\n
\n
ASIAN\n
オプション・パラメーター入力により、モンテカルロ法でアジアンオプション価格が計算可能。\n
\n
LSM\n
オプション・パラメーター入力により、最小二乗モンテカルロ法方程式でアメリカンオプション・バミューダン価格が計算可能。\n
\n
パラメーター\n
Payoff Function: ペイオフ関数、例:  K-S  （プット・オプション）、  S-K  （コール・オプション）、  SAVG-K  （アジアン・コール・オプション）\n
Expiry Price (S): 最小二乗モンテカルロ法で計算。\n
Arithmetic Average (SAVG): モンテカルロ法で計算。\n
Current Price (S0): 原資産価格\n
Exercise Price (K): 行使価格\n
Annual Risk Free Rate (R): 短期金利\n
Volatility \u03C3 (V): ボラティリティ\n
Years to Expiry (T): 満期期間（年）\n
numPaths: モンテカルロシミュレーションのパス数。値が大きすぎれば、計算時に、端末の動作が遅くなる場合がある。\n
numSteps: 1年の行使ステップ数\n
PRNG Seed: 擬似乱数生成器のシード値\n
Generate Seed: ランダムなシードを生成する。\n
Scala/JNI: モンテカルロコードのScala/JNIバージョンを選択。 (アジアンオプションのみ対応。LSMはまだ未対応)\n
\n
コピー\n
出力ウィンドウの内容をクリップボードにコピー。\n
\n
設定\n
設定を変更。\n
　numSamples: グラフのパスの数。 大きすぎる値は、エラーを引き起こす可能性がある。\n
　Threshold: このサイズより大きなオブジェクトは、ＳＤカードでキャッシュされる。 最適値は、端末のメモリー容量などに依存する。\n
　uiUpdateInterval: LSM計算時のUIアップデート間隔\n
\n
CLR\n
出力ウィンドウ内容をクリア。\n
\n
キャンセル\n
実行中のLSM計算を中断。\n
\n
ヘルプ\n
ヘルプメニューを表示。\n
\n
</string>

  <string name="copy_content">出力をクリップボードにコピーした</string>
</resources>
